name: Continuous Integration

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-go:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Build binary
        run: go build -v .

      - name: Verify build
        run: ./valkey-leader --help || echo "Binary built successfully"

  lint-helm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.0'

      - name: Lint Helm chart
        run: helm lint ./helm/valkey-leader

      - name: Template Helm chart (default values)
        run: helm template test-release ./helm/valkey-leader

      - name: Template Helm chart (redis_exporter disabled)
        run: |
          echo "redisExporter:" > /tmp/test-values.yaml
          echo "  enabled: false" >> /tmp/test-values.yaml
          helm template test-release ./helm/valkey-leader -f /tmp/test-values.yaml

      - name: Template Helm chart (ServiceMonitor enabled)
        run: |
          echo "monitoring:" > /tmp/test-values.yaml
          echo "  serviceMonitor:" >> /tmp/test-values.yaml
          echo "    enabled: true" >> /tmp/test-values.yaml
          helm template test-release ./helm/valkey-leader -f /tmp/test-values.yaml

  docker-build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test only)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: valkey-leader:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  integration-test:
    runs-on: ubuntu-latest
    needs: [test-go, lint-helm, docker-build-test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.0'

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Create KinD cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: valkey-test

      - name: Wait for cluster to be ready
        run: |
          kubectl cluster-info
          kubectl wait --for=condition=Ready nodes --all --timeout=300s

      - name: Build and load Docker image
        run: |
          docker build -t valkey-leader:test .
          kind load docker-image valkey-leader:test --name valkey-test

      - name: Install Helm chart
        run: |
          helm install valkey-test ./helm/valkey-leader \
            --set valkeyLeader.image.repository=valkey-leader \
            --set valkeyLeader.image.tag=test \
            --set valkeyLeader.image.pullPolicy=Never \
            --wait --timeout=300s

      - name: Wait for StatefulSet to be ready
        run: |
          kubectl wait --for=condition=Ready pod -l app.kubernetes.io/name=valkey-leader --timeout=300s

      - name: Test Valkey operations
        run: |
          kubectl run redis-cli-test --rm -i --restart=Never --image=redis:7-alpine -- sh -c '
            redis-cli -h valkey-test-valkey-leader-rw -p 6379 set test-key integration-test
            redis-cli -h valkey-test-valkey-leader-rw -p 6379 incr counter
            TEST_VALUE=$(redis-cli -h valkey-test-valkey-leader-r -p 6379 get test-key)
            if [ "$TEST_VALUE" != "integration-test" ]; then
              echo "Test failed: expected integration-test, got $TEST_VALUE"
              exit 1
            fi
            echo "Integration test passed!"
          '
